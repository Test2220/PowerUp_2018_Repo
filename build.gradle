import jaci.gradle.deploy.artifact.FileCollectionArtifact
import jaci.openrio.gradle.frc.FRCJavaArtifact
import jaci.openrio.gradle.frc.RoboRIO

plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2018.02.17"

}

def TEAM = 2220
def ROBOT_CLASS = "frc.team2220.robot.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", RoboRIO) {
            team = TEAM
            user = 'admin'         // User to login as. Required.
            password = '2220'
        }
    }
    artifacts {
        artifact('frcJava', FRCJavaArtifact) {
            targets << "roborio"
        }

        artifact('leftPaths', FileCollectionArtifact) {
            files = project.fileTree(dir: 'src/paths/LeftStart', include: '*.csv')
            directory = '/home/lvuser/paths/LeftStart/'
            targets << "roborio"
        }

        artifact('middlePaths', FileCollectionArtifact) {
            files = project.fileTree(dir: 'src/paths/MiddleStart', include: '*.csv')
            directory = '/home/lvuser/paths/MiddleStart/'
            targets << "roborio"
        }

        artifact('rightPaths', FileCollectionArtifact) {
            files = project.fileTree(dir: 'src/paths/RightStart', include: '*.csv')
            directory = '/home/lvuser/paths/RightStart/'
            targets << "roborio"
        }
        artifact('testPaths', FileCollectionArtifact) {
            files = project.fileTree(dir: 'src/paths/TestPaths', include: '*.csv')
            directory = '/home/lvuser/paths/TestPaths/'
            targets << "roborio"
        }

        artifact('LeftStart_v2', FileCollectionArtifact) {
            files = project.fileTree(dir: 'src/paths/LeftStart_v2', include: '*.csv')
            directory = '/home/lvuser/paths/LeftStart_v2/'
            targets << "roborio"
        }
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Phoenix (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctreLegacy()
    compile navx()
    compile pathfinder()
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/resources"
    into "${buildDir}/classes/resources"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}